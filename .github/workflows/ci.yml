name: CI

on: [push, pull_request]

jobs:
  backend:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: {python-version: "3.12"}  # Match the backend target version and avoid 3.13 compatibility issues
      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py', 'tox.ini', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install backend + dev deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e ".[dev]"  # Install package with dev dependencies
          python -m pip install tox
      - name: DEBUG â€“ show env & mypy
        continue-on-error: true  # make non-blocking
        run: |
          echo "PATH = $PATH"
          which mypy || echo "mypy not in PATH"
          python -m pip list | grep -E 'mypy|types-' || true
      - name: Run checks with tox
        run: tox

  frontend:
    runs-on: ubuntu-latest
    defaults: {run: {working-directory: pme_calculator/frontend}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: {node-version: "20"}
      - run: npm ci
      - run: npm run test

  docker:
    needs: [backend, frontend]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max 