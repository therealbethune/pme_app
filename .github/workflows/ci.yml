name: CI

on: [push, pull_request]

jobs:
  backend:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: {python-version: "3.13"}
      - name: Install backend deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install mypy pytest coverage
      - name: Type check with mypy
        run: mypy pme_app/services
      - name: Run tests with coverage
        run: |
          pytest tests/ --cov=pme_app --cov-report=xml --cov-report=html --cov-fail-under=5 -q
          cd pme_calculator/backend && pytest tests/ --cov=pme_math --cov-report=term-missing --cov-fail-under=80 -q
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false
      - name: Generate coverage badge
        run: |
          pip install coverage-badge
          coverage-badge -o coverage.svg
      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.xml
            coverage.svg
            htmlcov/
            .coverage
      - name: Commit coverage badge
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add coverage.svg
          if ! git diff --staged --quiet; then
            git commit -m "Update coverage badge [skip ci]"
            git pull --rebase origin main || true
            git push origin main || echo "Failed to push coverage badge update"
          fi

  frontend:
    runs-on: ubuntu-latest
    defaults: {run: {working-directory: pme_calculator/frontend}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: {node-version: "20"}
      - run: npm ci
      - run: npm run test

  docker:
    needs: [backend, frontend]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max 